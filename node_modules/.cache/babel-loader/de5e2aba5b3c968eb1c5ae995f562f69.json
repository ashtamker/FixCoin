{"ast":null,"code":"var _jsxFileName = \"/Applications/bootcamp/react/FixCoin/src/component/convert/Convert.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport CurrencyRow from '../currencyRow/CurrencyRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Convert = () => {\n  _s();\n\n  const BASE_URL = 'https://api.exchangeratesapi.io/latest';\n  const [currencyOptions, setCurrencyOptions] = useState([]);\n  const [fromCurrency, setFromCurrency] = useState();\n  const [toCurrency, setToCurrency] = useState();\n  const [exchangeRate, setExchangeRate] = useState();\n  const [amount, setAmount] = useState(1);\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState(true);\n  let toAmount, fromAmount;\n\n  if (amountInFromCurrency) {\n    fromAmount = amount;\n    toAmount = amount * exchangeRate;\n  } else {\n    toAmount = amount;\n    fromAmount = amount / exchangeRate;\n  }\n\n  useEffect(() => {\n    fetch(BASE_URL).then(res => res.json()).then(data => {\n      const firstCurrency = Object.keys(data.rates)[0];\n      setCurrencyOptions([data.base, ...Object.keys(data.rates)]);\n      setFromCurrency(data.base);\n      setToCurrency(firstCurrency);\n      setExchangeRate(data.rates[firstCurrency]);\n    });\n  }, []);\n  useEffect(() => {\n    if (fromCurrency != null && toCurrency != null) {\n      fetch(`${BASE_URL}?base=${fromCurrency}&symbols=${toCurrency}`).then(res => res.json()).then(data => setExchangeRate(data.rates[toCurrency]));\n    }\n  }, [fromCurrency, toCurrency]);\n\n  function handleFromAmountChange(e) {\n    setAmount(e.target.value);\n    setAmountInFromCurrency(true);\n  }\n\n  function handleToAmountChange(e) {\n    setAmount(e.target.value);\n    setAmountInFromCurrency(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"convert-title\",\n      children: \"Convert Currency\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CurrencyRow, {\n      currencyOptions: currencyOptions,\n      selectedCurrency: fromCurrency,\n      onChangeCurrency: e => setFromCurrency(e.target.value),\n      onChangeAmount: handleFromAmountChange,\n      amount: fromAmount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"eq-currencyrow\",\n      children: \"=\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CurrencyRow, {\n      currencyOptions: currencyOptions,\n      selectedCurrency: toCurrency,\n      onChangeCurrency: e => setToCurrency(e.target.value),\n      onChangeAmount: handleToAmountChange,\n      amount: toAmount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Convert, \"vivv78ALnyu/GjoNvi1g3YQFUKM=\");\n\n_c = Convert;\nexport default Convert;\n\nvar _c;\n\n$RefreshReg$(_c, \"Convert\");","map":{"version":3,"sources":["/Applications/bootcamp/react/FixCoin/src/component/convert/Convert.js"],"names":["React","useState","useEffect","CurrencyRow","Convert","BASE_URL","currencyOptions","setCurrencyOptions","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeRate","setExchangeRate","amount","setAmount","amountInFromCurrency","setAmountInFromCurrency","toAmount","fromAmount","fetch","then","res","json","data","firstCurrency","Object","keys","rates","base","handleFromAmountChange","e","target","value","handleToAmountChange"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CurrencyRow from '../currencyRow/CurrencyRow';\n\n\n\nconst Convert = () => {\n    const BASE_URL = 'https://api.exchangeratesapi.io/latest'\n\n    const [currencyOptions, setCurrencyOptions] = useState([]);\n    const [fromCurrency, setFromCurrency] = useState();\n    const [toCurrency, setToCurrency] = useState();\n    const [exchangeRate, setExchangeRate] = useState();\n    const [amount, setAmount] = useState(1);\n    const [amountInFromCurrency, setAmountInFromCurrency] = useState(true);\n    \n    let toAmount, fromAmount\n  if (amountInFromCurrency) {\n    fromAmount = amount\n    toAmount = amount * exchangeRate\n  } else {\n    toAmount = amount\n    fromAmount = amount / exchangeRate\n  }\n\n  useEffect(() => {\n    fetch(BASE_URL)\n      .then(res => res.json())\n      .then(data => {\n        const firstCurrency = Object.keys(data.rates)[0]\n        setCurrencyOptions([data.base, ...Object.keys(data.rates)])\n        setFromCurrency(data.base)\n        setToCurrency(firstCurrency)\n        setExchangeRate(data.rates[firstCurrency])\n      })\n  }, [])\n\n  useEffect(() => {\n    if (fromCurrency != null && toCurrency != null) {\n      fetch(`${BASE_URL}?base=${fromCurrency}&symbols=${toCurrency}`)\n        .then(res => res.json())\n        .then(data => setExchangeRate(data.rates[toCurrency]))\n    }\n  }, [fromCurrency, toCurrency])\n\n  function handleFromAmountChange(e) {\n    setAmount(e.target.value)\n    setAmountInFromCurrency(true)\n  }\n\n  function handleToAmountChange(e) {\n    setAmount(e.target.value)\n    setAmountInFromCurrency(false)\n  }\n\n\n    return(\n        <div>\n            <h1 className=\"convert-title\">Convert Currency</h1>\n            <CurrencyRow\n              currencyOptions={currencyOptions}\n              selectedCurrency={fromCurrency}\n              onChangeCurrency={e => setFromCurrency(e.target.value)}\n              onChangeAmount={handleFromAmountChange}\n              amount={fromAmount}\n            />\n            <div className=\"eq-currencyrow\">=</div>\n            <CurrencyRow \n            currencyOptions={currencyOptions}\n            selectedCurrency={toCurrency}\n            onChangeCurrency={e => setToCurrency(e.target.value)}\n            onChangeAmount={handleToAmountChange}\n            amount={toAmount}\n            />\n        </div>\n    )\n\n}\n\nexport default Convert; "]},"metadata":{},"sourceType":"module"}