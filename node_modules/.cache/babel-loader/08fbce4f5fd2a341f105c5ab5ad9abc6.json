{"ast":null,"code":"var _jsxFileName = \"/Applications/bootcamp/react/FixCoin/src/component/convert/Convert.js\";\nimport React, { useState, useEffect } from 'react';\nimport CurrencyRow from '../currencyRow/CurrencyRow'; // const BASE_URL = 'https://api.coingecko.com/api/v3/simple/price?ids=bitcoin%2Cethereum%2Clitecoin%2Cbinancecoin%2Cuniswap%2Cchainlink%2Cqtum&vs_currencies=usd';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Convert = () => {\n  //     const [currencyOptions, setCurrencyOptions] = useState([]);\n  //     const [fromCurrency, setFromCurrency] = useState();\n  //     const [toCurrency, setToCurrency] = useState();\n  //     const [exchangeRate, setExchangeRate] = useState();\n  //     const [amount, setAmount] = useState(1);\n  //     const [amountInFromCurrency, setAmountInFromCurrency] = useState(true);\n  //     let toAmount, fromAmount\n  //   if (amountInFromCurrency) {\n  //     fromAmount = amount\n  //     toAmount = amount * exchangeRate\n  //   } else {\n  //     toAmount = amount\n  //     fromAmount = amount / exchangeRate\n  //   }\n  //   useEffect(() => {\n  //     fetch(BASE_URL)\n  //       .then(data => {\n  //         const firstCurrency = Object.keys(data.usd)[0]\n  //         setCurrencyOptions([data.usd, ...Object.keys(data.usd)])\n  //         setFromCurrency(data.usd)\n  //         setToCurrency(firstCurrency)\n  //         setExchangeRate(data.rates[firstCurrency])\n  //       })\n  //   }, [])\n  //   useEffect(() => {\n  //     if (fromCurrency != null && toCurrency != null) {\n  //       fetch(`${BASE_URL}?base=${fromCurrency}&symbols=${toCurrency}`)\n  //         .then(data => setExchangeRate(data.usd[toCurrency]))\n  //     }\n  //   }, [fromCurrency, toCurrency])\n  //   function handleFromAmountChange(e) {\n  //     setAmount(e.target.value)\n  //     setAmountInFromCurrency(true)\n  //   }\n  //   function handleToAmountChange(e) {\n  //     setAmount(e.target.value)\n  //     setAmountInFromCurrency(false)\n  //   }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"convert-title\",\n      children: \"Convert Currency\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CurrencyRow, {\n      currencyOptions: currencyOptions,\n      selectedCurrency: fromCurrency,\n      onChangeCurrency: e => setFromCurrency(e.target.value),\n      onChangeAmount: handleFromAmountChange,\n      amount: fromAmount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"eq-currencyrow\",\n      children: \"=\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CurrencyRow, {\n      currencyOptions: currencyOptions,\n      selectedCurrency: toCurrency,\n      onChangeCurrency: e => setToCurrency(e.target.value),\n      onChangeAmount: handleToAmountChange,\n      amount: toAmount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Convert;\nexport default Convert;\n\nvar _c;\n\n$RefreshReg$(_c, \"Convert\");","map":{"version":3,"sources":["/Applications/bootcamp/react/FixCoin/src/component/convert/Convert.js"],"names":["React","useState","useEffect","CurrencyRow","Convert","currencyOptions","fromCurrency","e","setFromCurrency","target","value","handleFromAmountChange","fromAmount","toCurrency","setToCurrency","handleToAmountChange","toAmount"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,4BAAxB,C,CAEA;;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAGtB;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGI,sBACI;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,WAAD;AACE,MAAA,eAAe,EAAEC,eADnB;AAEE,MAAA,gBAAgB,EAAEC,YAFpB;AAGE,MAAA,gBAAgB,EAAEC,CAAC,IAAIC,eAAe,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAHxC;AAIE,MAAA,cAAc,EAAEC,sBAJlB;AAKE,MAAA,MAAM,EAAEC;AALV;AAAA;AAAA;AAAA;AAAA,YAFJ,eASI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,eAUI,QAAC,WAAD;AACA,MAAA,eAAe,EAAEP,eADjB;AAEA,MAAA,gBAAgB,EAAEQ,UAFlB;AAGA,MAAA,gBAAgB,EAAEN,CAAC,IAAIO,aAAa,CAACP,CAAC,CAACE,MAAF,CAASC,KAAV,CAHpC;AAIA,MAAA,cAAc,EAAEK,oBAJhB;AAKA,MAAA,MAAM,EAAEC;AALR;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CArED;;KAAMZ,O;AAuEN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CurrencyRow from '../currencyRow/CurrencyRow';\n\n// const BASE_URL = 'https://api.coingecko.com/api/v3/simple/price?ids=bitcoin%2Cethereum%2Clitecoin%2Cbinancecoin%2Cuniswap%2Cchainlink%2Cqtum&vs_currencies=usd';\n\nconst Convert = () => {\n    \n\n//     const [currencyOptions, setCurrencyOptions] = useState([]);\n//     const [fromCurrency, setFromCurrency] = useState();\n//     const [toCurrency, setToCurrency] = useState();\n//     const [exchangeRate, setExchangeRate] = useState();\n//     const [amount, setAmount] = useState(1);\n//     const [amountInFromCurrency, setAmountInFromCurrency] = useState(true);\n    \n//     let toAmount, fromAmount\n//   if (amountInFromCurrency) {\n//     fromAmount = amount\n//     toAmount = amount * exchangeRate\n//   } else {\n//     toAmount = amount\n//     fromAmount = amount / exchangeRate\n//   }\n\n//   useEffect(() => {\n//     fetch(BASE_URL)\n//       .then(data => {\n//         const firstCurrency = Object.keys(data.usd)[0]\n//         setCurrencyOptions([data.usd, ...Object.keys(data.usd)])\n//         setFromCurrency(data.usd)\n//         setToCurrency(firstCurrency)\n//         setExchangeRate(data.rates[firstCurrency])\n//       })\n//   }, [])\n\n//   useEffect(() => {\n//     if (fromCurrency != null && toCurrency != null) {\n//       fetch(`${BASE_URL}?base=${fromCurrency}&symbols=${toCurrency}`)\n//         .then(data => setExchangeRate(data.usd[toCurrency]))\n//     }\n//   }, [fromCurrency, toCurrency])\n\n//   function handleFromAmountChange(e) {\n//     setAmount(e.target.value)\n//     setAmountInFromCurrency(true)\n//   }\n\n//   function handleToAmountChange(e) {\n//     setAmount(e.target.value)\n//     setAmountInFromCurrency(false)\n//   }\n\n\n    return(\n        <div>\n            <h1 className=\"convert-title\">Convert Currency</h1>\n            <CurrencyRow\n              currencyOptions={currencyOptions}\n              selectedCurrency={fromCurrency}\n              onChangeCurrency={e => setFromCurrency(e.target.value)}\n              onChangeAmount={handleFromAmountChange}\n              amount={fromAmount}\n            />\n            <div className=\"eq-currencyrow\">=</div>\n            <CurrencyRow \n            currencyOptions={currencyOptions}\n            selectedCurrency={toCurrency}\n            onChangeCurrency={e => setToCurrency(e.target.value)}\n            onChangeAmount={handleToAmountChange}\n            amount={toAmount}\n            />\n        </div>\n    )\n\n}\n\nexport default Convert; "]},"metadata":{},"sourceType":"module"}