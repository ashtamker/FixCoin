{"ast":null,"code":"var _jsxFileName = \"/Applications/bootcamp/react/FixCoin/src/component/coinchart/CoinChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport Chart from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CoinChart = () => {\n  _s();\n\n  const myRef = useRef();\n  useEffect(() => {\n    if (myRef && myRef.current) {\n      const chart = new Chart(myRef.current, {\n        type: 'line',\n        data: {\n          datasets: [{\n            label: '# of Votes',\n            data: [{\n              x: 1\n            }],\n            borderWidth: 1\n          }]\n        },\n        options: {\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: myRef,\n      id: \"mychart\",\n      width: 250,\n      height: 250\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CoinChart, \"q2ppNrvms5kW2WRaEHDe9gJ2smw=\");\n\n_c = CoinChart;\nexport default CoinChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinChart\");","map":{"version":3,"sources":["/Applications/bootcamp/react/FixCoin/src/component/coinchart/CoinChart.js"],"names":["React","useRef","useEffect","Chart","CoinChart","myRef","current","chart","type","data","datasets","label","x","borderWidth","options","scales","y","beginAtZero"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,UAAlB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAMC,KAAK,GAAGJ,MAAM,EAApB;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGG,KAAK,IAAIA,KAAK,CAACC,OAAlB,EAA0B;AACtB,YAAMC,KAAK,GAAG,IAAIJ,KAAJ,CAAUE,KAAK,CAACC,OAAhB,EAAyB;AACnCE,QAAAA,IAAI,EAAE,MAD6B;AAE/CC,QAAAA,IAAI,EAAE;AACFC,UAAAA,QAAQ,EAAE,CACN;AACAC,YAAAA,KAAK,EAAE,YADP;AAEAF,YAAAA,IAAI,EAAE,CAAC;AAACG,cAAAA,CAAC,EAAE;AAAJ,aAAD,CAFN;AAKAC,YAAAA,WAAW,EAAE;AALb,WADM;AADR,SAFyC;AAY/CC,QAAAA,OAAO,EAAE;AACLC,UAAAA,MAAM,EAAE;AACJC,YAAAA,CAAC,EAAE;AACCC,cAAAA,WAAW,EAAE;AADd;AADC;AADH;AAZsC,OAAzB,CAAd;AAoBH;AACJ,GAvBQ,CAAT;AAwBA,sBACI;AAAA,2BACI;AAAQ,MAAA,GAAG,EAAEZ,KAAb;AAAoB,MAAA,EAAE,EAAC,SAAvB;AAAiC,MAAA,KAAK,EAAE,GAAxC;AAA6C,MAAA,MAAM,EAAE;AAArD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAhCD;;GAAMD,S;;KAAAA,S;AAkCN,eAAeA,SAAf","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport Chart from 'chart.js';\n\nconst CoinChart = () => {\n    const myRef = useRef();\n    useEffect(() => {\n        if(myRef && myRef.current){\n            const chart = new Chart(myRef.current, {\n                type: 'line',\n    data: {\n        datasets: [\n            {\n            label: '# of Votes',\n            data: [{x: 1}],\n          \n          \n            borderWidth: 1\n        }]\n    },\n    options: {\n        scales: {\n            y: {\n                beginAtZero: true\n            }\n        }\n    }\n            })\n        } \n    })\n    return(\n        <div>\n            <canvas ref={myRef} id=\"mychart\" width={250} height={250}></canvas> \n            \n        </div>\n    ) \n};\n\nexport default CoinChart;"]},"metadata":{},"sourceType":"module"}