{"ast":null,"code":"var _jsxFileName = \"/Applications/bootcamp/react/FixCoin/src/component/coinchart/CoinChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport Chartjs from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CoinChart = () => {\n  _s();\n\n  const myRef = useRef();\n  useEffect(() => {\n    if (myRef && myRef.current) {\n      const chartInstance = new Chartjs(myRef.current, {});\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"mychart\",\n      ref: \"myRef\",\n      width: 250,\n      height: 250\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CoinChart, \"q2ppNrvms5kW2WRaEHDe9gJ2smw=\");\n\n_c = CoinChart;\nexport default CoinChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinChart\");","map":{"version":3,"sources":["/Applications/bootcamp/react/FixCoin/src/component/coinchart/CoinChart.js"],"names":["React","useRef","useEffect","Chartjs","CoinChart","myRef","current","chartInstance"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,UAApB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAMC,KAAK,GAAGJ,MAAM,EAApB;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGG,KAAK,IAAIA,KAAK,CAACC,OAAlB,EAA0B;AACtB,YAAMC,aAAa,GAAG,IAAIJ,OAAJ,CAAYE,KAAK,CAACC,OAAlB,EAA2B,EAA3B,CAAtB;AAIH;AACJ,GAPQ,CAAT;AAQA,sBACI;AAAA,2BACI;AAAQ,MAAA,EAAE,EAAC,SAAX;AAAqB,MAAA,GAAG,EAAC,OAAzB;AAAiC,MAAA,KAAK,EAAE,GAAxC;AAA6C,MAAA,MAAM,EAAE;AAArD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAhBD;;GAAMF,S;;KAAAA,S;AAkBN,eAAeA,SAAf","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport Chartjs from 'chart.js';\n\nconst CoinChart = () => {\n    const myRef = useRef()\n    useEffect(() => {\n        if(myRef && myRef.current){\n            const chartInstance = new Chartjs(myRef.current, {\n                \n            })\n\n        } \n    })\n    return(\n        <div>\n            <canvas id=\"mychart\" ref=\"myRef\" width={250} height={250}></canvas> \n            \n        </div>\n    )\n}\n\nexport default CoinChart;"]},"metadata":{},"sourceType":"module"}